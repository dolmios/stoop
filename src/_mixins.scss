/* Typography  */

@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
   @font-face {
      font-family: quote($font-name);
      src: url($file-name+".eot");
      src: url($file-name+".eot?#iefix") format("embedded-opentype"),
      url($file-name+".woff") format("woff"),
      url($file-name+".woff2") format("woff2"),
      url($file-name+".ttf") format("truetype"),
      url($file-name+".svg##{$font-name}") format("svg");
      font-weight: $weight;
      font-style: $style;
      font-display: swap;
   }
}


/* Breakpoints  */
@mixin phone {
   @media only screen and (max-width: $break--1) {
      @content;
   }
}

@mixin tablet {
   @media only screen and (min-width: $break--1 + 0.01rem) {
      @content;
   }
}

@mixin tablet-specific {
   @media only screen and (min-width: $break--1 + 0.01rem) and (max-width: $break--2 - 0.01rem) {
      @content;
   }
}

@mixin laptop {
   @media only screen and (min-width: $break--2) {
      @content;
   }
}

@mixin laptop-specific {
   @media only screen and (min-width: $break--2) and (max-width: $break--3 - 0.01rem) {
      @content;
   }
}

@mixin desktop {
   @media only screen and (min-width: $break--3) {
      @content;
   }
}

@mixin desktop-specific {
   @media only screen and (min-width: $break--3) and (max-width: $break--4 - 0.01rem) {
      @content;
   }
}

@mixin wide {
   @media only screen and (min-width: $break--4) {
      @content;
   }
}


/* Container Widths
      ========================================================================== */

@mixin max--widths() {
   max-width: $width--phone !important;

   @include tablet-specific {
      max-width: $width--tablet !important;
   }

   @include laptop-specific {
      max-width: $width--laptop !important;
   }

   @include desktop {
      max-width: $width--desktop !important;
   }

   @include desktop-specific {
      max-width: $width--desktop !important;
   }

   @include wide {
      width: $width--wide-a !important;
      max-width: $width--wide-b !important;
   }
}


/* Rows and Columns
      ========================================================================== */

@mixin render-column($width) {
   &.s-#{$width} {
      flex: 0 0 (($width)+ 0%);
      max-width: (($width)+ 0%);
   }
}

@mixin render-offset($width) {
   &.o-#{$width} {
      margin-left: (($width)+ 0%);
   }
}

@mixin render-column-phone($width) {
   &.s-#{$width}-phone {
      flex: 0 0 (($width)+ 0%);
      max-width: (($width)+ 0%);
   }
}

@mixin render-offset-phone($width) {
   &.o-#{$width}-phone {
      margin-left: (($width)+ 0%);
   }
}

@mixin render-column-tablet($width) {
   &.s-#{$width}-tablet {
      flex: 0 0 (($width)+ 0%);
      max-width: (($width)+ 0%);
   }
}

@mixin render-offset-tablet($width) {
   &.o-#{$width}-tablet {
      margin-left: (($width)+ 0%);
   }
}

@mixin render-column-laptop($width) {
   &.s-#{$width}-laptop {
      flex: 0 0 (($width)+ 0%);
      max-width: (($width)+ 0%);
   }
}

@mixin render-offset-laptop($width) {
   &.o-#{$width}-laptop {
      margin-left: (($width)+ 0%);
   }
}

@mixin render-column-desktop($width) {
   &.s-#{$width}-desktop {
      flex: 0 0 (($width)+ 0%);
      max-width: (($width)+ 0%);
   }
}

@mixin render-offset-desktop($width) {
   &.o-#{$width}-desktop {
      margin-left: (($width)+ 0%);
   }
}


@mixin render-column-wide($width) {
   &.s-#{$width}-wide {
      flex: 0 0 (($width)+ 0%);
      max-width: (($width)+ 0%);
   }
}

@mixin render-offset-wide($width) {
   &.o-#{$width}-wide {
      margin-left: (($width)+ 0%);
   }
}

/* paddings */
@mixin render-padding-top($space-label, $space-var) {
   .p-t-#{$space-label} {
      padding-top: (($space-var));
   }
}

@mixin render-padding-top-phone($space-label, $space-var) {
   @include phone {
      .p-t-#{$space-label} {
         padding-top: (($space-var));
      }

      .p-t-#{$space-label}-phone {
         padding-top: (($space-var)) !important;
      }
   }
}

@mixin render-padding-top-tablet($space-label, $space-var) {
   @include tablet-specific {
      .p-t-#{$space-label} {
         padding-top: (($space-var));
      }

      .p-t-#{$space-label}-tablet {
         padding-top: (($space-var)) !important;
      }
   }
}

@mixin render-padding-top-laptop($space-label, $space-var) {
   @include laptop-specific {
      .p-t-#{$space-label} {
         padding-top: (($space-var));
      }

      .p-t-#{$space-label}-laptop {
         padding-top: (($space-var)) !important;
      }
   }
}

@mixin render-padding-top-desktop($space-label, $space-var) {
   @include desktop-specific {
      .p-t-#{$space-label} {
         padding-top: (($space-var));
      }

      .p-t-#{$space-label}-desktop {
         padding-top: (($space-var)) !important;
      }
   }
}

@mixin render-padding-top-wide($space-label, $space-var) {
   @include wide {
      .p-t-#{$space-label} {
         padding-top: (($space-var));
      }

      .p-t-#{$space-label}-wide {
         padding-top: (($space-var)) !important;
      }
   }
}